export function fetchAndCreateElements(dataPath) {
    const elementsContainer = document.getElementById("elements-container");

    // Helper function to handle retry logic
    const fetchWithRetry = (attempts) => {
        return fetch(dataPath)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch data: ' + response.statusText);
                }
                return response.json();
            })
            .catch((error) => {
                if (attempts <= 1) {
                    throw error; // No retries left, throw the error
                } else {
                    console.log(`Retrying fetch... Attempts left: ${attempts - 1}`);
                    return new Promise(resolve => setTimeout(resolve, 100))  // Retry after .1 second
                        .then(() => fetchWithRetry(attempts - 1)); // Retry after delay
                }
            });
    };

    // Start the fetch process with retry logic (3 attempts by default)
    fetchWithRetry(3)
        .then(data => {
            const elements = data;

            // Process each element one by one
            elements.forEach(element => {
                const elementBox = document.createElement("div");
                elementBox.className = "element-box";

                Object.keys(element).forEach(param => {
                    const value = element[param];

                    if (param === "link") {
                        const link = document.createElement("a");
                        link.href = value;
                        link.className = "sLink";
                        link.textContent = value;
                        elementBox.appendChild(link);
                    } else if (param === "text") {
                        const title = document.createElement("h3");
                        title.textContent = value;
                        elementBox.appendChild(title);
                    } else {
                        const customElement = document.createElement("div");
                        customElement.className = param;
                        customElement.textContent = `${param}: ${value}`;
                        elementBox.appendChild(customElement);
                    }
                });

                // Append the elementBox to the container as soon as it is ready
                elementsContainer.appendChild(elementBox);

                // Optionally, you can add a small delay between adding each element for better user experience
                // setTimeout(() => elementsContainer.appendChild(elementBox), 100);
            });

            // Ensure the content is visible now
            const myDiv = document.getElementById("myDiv");
            if (myDiv) {
                myDiv.style.display = "block";
            }
        })
        .catch(error => {
            console.error("Error fetching data after multiple attempts:", error);
            alert("Failed to load the data after multiple attempts.");
        });
}
